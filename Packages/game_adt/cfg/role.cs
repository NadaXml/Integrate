// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace cfg
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct role : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static role GetRootAsrole(ByteBuffer _bb) { return GetRootAsrole(_bb, new role()); }
  public static role GetRootAsrole(ByteBuffer _bb, role obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public role __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public int EquipId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public cfg.AttrGroup? AttrGroup { get { int o = __p.__offset(10); return o != 0 ? (cfg.AttrGroup?)(new cfg.AttrGroup()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<cfg.role> Createrole(FlatBufferBuilder builder,
      int id = 0,
      StringOffset nameOffset = default(StringOffset),
      int equip_id = 0,
      Offset<cfg.AttrGroup> attr_groupOffset = default(Offset<cfg.AttrGroup>)) {
    builder.StartTable(4);
    role.AddAttrGroup(builder, attr_groupOffset);
    role.AddEquipId(builder, equip_id);
    role.AddName(builder, nameOffset);
    role.AddId(builder, id);
    return role.Endrole(builder);
  }

  public static void Startrole(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddEquipId(FlatBufferBuilder builder, int equipId) { builder.AddInt(2, equipId, 0); }
  public static void AddAttrGroup(FlatBufferBuilder builder, Offset<cfg.AttrGroup> attrGroupOffset) { builder.AddOffset(3, attrGroupOffset.Value, 0); }
  public static Offset<cfg.role> Endrole(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 10);  // attr_group
    return new Offset<cfg.role>(o);
  }
}


static public class roleVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Name*/, false)
      && verifier.VerifyField(tablePos, 8 /*EquipId*/, 4 /*int*/, 4, false)
      && verifier.VerifyTable(tablePos, 10 /*AttrGroup*/, cfg.AttrGroupVerify.Verify, true)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
